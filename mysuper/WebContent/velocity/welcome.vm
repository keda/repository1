<STYLE type="text/css">
	.x-grid-row-over .x-grid-cell-inner { 
		font-weight: bold; 
	}
</STYLE>
<h3>欢迎使用Velocity @${currTime}</h3>
<hr>
<div id="data-cnt"></div>
<script type="text/javascript">
  
  Ext.onReady(function(){
	//extjs grid
	Ext.define('Company', {
        extend: 'Ext.data.Model',
        fields: [
           {name: 'company'},
           {name: 'price',      type: 'float', convert: null,     defaultValue: undefined},
           {name: 'change',     type: 'float', convert: null,     defaultValue: undefined},
           {name: 'pctChange',  type: 'float', convert: null,     defaultValue: undefined},
           {name: 'lastChange', type: 'date',  dateFormat: 'n/j h:ia', defaultValue: undefined}
        ],
        idProperty: 'company'
    });
	// sample static data for the store
    var myData = $data;
	
	/**
     * Custom function used for column renderer
     * @param {Object} val
     */
    function change(val) {
        if (val > 0) {
            return '<span style="color:green;">' + val + '</span>';
        } else if (val < 0) {
            return '<span style="color:red;">' + val + '</span>';
        }
        return val;
    }

    /**
     * Custom function used for column renderer
     * @param {Object} val
     */
    function pctChange(val) {
        if (val > 0) {
            return '<span style="color:green;">' + val + '%</span>';
        } else if (val < 0) {
            return '<span style="color:red;">' + val + '%</span>';
        }
        return val;
    }
	// create the data store
    var store = Ext.create('Ext.data.ArrayStore', {
        model: 'Company',
        data: myData
    });
	
	// create the Grid
    var grid = Ext.create('Ext.grid.Panel', {
        store: store,
        stateful: true,
        ##collapsible: true,
		##columnLines: true,
		draggable: true,
        multiSelect: true,
        stateId: 'stateGrid',
        columns: [
            {
                text     : 'Company',
                flex     : 1,
                sortable : false,
                dataIndex: 'company'
            },
            {
                text     : 'Price',
                width    : 75,
                sortable : true,
                renderer : 'usMoney',
                dataIndex: 'price'
            },
            {
                text     : 'Change',
                width    : 75,
                sortable : true,
                renderer : change,
                dataIndex: 'change'
            },
            {
                text     : '% Change',
                width    : 75,
                sortable : true,
                renderer : pctChange,
                dataIndex: 'pctChange'
            },
            {
                text     : 'Last Updated',
                width    : 85,
                sortable : true,
                renderer : Ext.util.Format.dateRenderer('m/d/Y'),
                dataIndex: 'lastChange'
            }
        ],
		listeners: {
			'cellclick': function(ob, td, cellIndex, record, tr, rowIndex){
				
				Ext.MessageBox.alert('消息', this.columns[cellIndex].text+' : '+td.innerText, function(){
					Ext.Msg.alert('Msg', '我是这个时候执行的...');
					##Ext.fly('ext-gen1056').setStyle({top: '30px'});
				});
			}
		},
        ##height: 350,
        width: 600,
        ##title: 'Array Grid',
        renderTo: 'data-cnt'
		##viewConfig: {
        ##    stripeRows: true,
        ##    enableTextSelection: true
        ##}
		
    });
  });
</script>
